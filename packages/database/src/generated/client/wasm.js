
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.18.0
 * Query Engine version: 34b5a692b7bd79939a9a2c3ef97d816e749cda2f
 */
Prisma.prismaVersion = {
  client: "6.18.0",
  engine: "34b5a692b7bd79939a9a2c3ef97d816e749cda2f"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.SiteScalarFieldEnum = {
  id: 'id',
  code: 'code',
  name: 'name',
  location: 'location',
  timezone: 'timezone',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MaterialScalarFieldEnum = {
  id: 'id',
  code: 'code',
  type: 'type',
  name: 'name',
  category: 'category',
  uom: 'uom',
  isFinal: 'isFinal',
  notes: 'notes',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.EquipmentScalarFieldEnum = {
  id: 'id',
  code: 'code',
  name: 'name',
  type: 'type',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ManpowerRoleScalarFieldEnum = {
  id: 'id',
  code: 'code',
  name: 'name',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProductionScalarFieldEnum = {
  id: 'id',
  siteId: 'siteId',
  date: 'date',
  shift: 'shift',
  materialId: 'materialId',
  qtyTon: 'qtyTon',
  operation: 'operation',
  notes: 'notes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  createdBy: 'createdBy'
};

exports.Prisma.DispatchScalarFieldEnum = {
  id: 'id',
  siteId: 'siteId',
  date: 'date',
  materialId: 'materialId',
  qtyTon: 'qtyTon',
  trips: 'trips',
  owner: 'owner',
  reference: 'reference',
  operation: 'operation',
  notes: 'notes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  createdBy: 'createdBy'
};

exports.Prisma.ReceivedMaterialScalarFieldEnum = {
  id: 'id',
  siteId: 'siteId',
  date: 'date',
  materialId: 'materialId',
  qtyTon: 'qtyTon',
  source: 'source',
  vehicleRef: 'vehicleRef',
  notes: 'notes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  createdBy: 'createdBy'
};

exports.Prisma.EquipmentLogScalarFieldEnum = {
  id: 'id',
  siteId: 'siteId',
  date: 'date',
  equipmentId: 'equipmentId',
  hours: 'hours',
  count: 'count',
  shift: 'shift',
  status: 'status',
  notes: 'notes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  createdBy: 'createdBy'
};

exports.Prisma.ManpowerLogScalarFieldEnum = {
  id: 'id',
  siteId: 'siteId',
  date: 'date',
  roleId: 'roleId',
  headcount: 'headcount',
  hours: 'hours',
  shift: 'shift',
  notes: 'notes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  createdBy: 'createdBy'
};

exports.Prisma.InventorySnapshotScalarFieldEnum = {
  id: 'id',
  siteId: 'siteId',
  date: 'date',
  materialId: 'materialId',
  openingTon: 'openingTon',
  producedTon: 'producedTon',
  receivedTon: 'receivedTon',
  dispatchedTon: 'dispatchedTon',
  adjustmentTon: 'adjustmentTon',
  closingTon: 'closingTon',
  isCalculated: 'isCalculated',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  createdBy: 'createdBy'
};

exports.Prisma.ExportJobScalarFieldEnum = {
  id: 'id',
  siteId: 'siteId',
  userId: 'userId',
  module: 'module',
  dateFrom: 'dateFrom',
  dateTo: 'dateTo',
  granularity: 'granularity',
  format: 'format',
  status: 'status',
  progress: 'progress',
  filePath: 'filePath',
  fileSize: 'fileSize',
  fileHash: 'fileHash',
  errorMessage: 'errorMessage',
  downloadUrl: 'downloadUrl',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ExportAuditScalarFieldEnum = {
  id: 'id',
  jobId: 'jobId',
  siteId: 'siteId',
  userId: 'userId',
  module: 'module',
  filtersJson: 'filtersJson',
  columnPreset: 'columnPreset',
  recordCount: 'recordCount',
  fileSize: 'fileSize',
  fileHash: 'fileHash',
  downloadCount: 'downloadCount',
  lastDownload: 'lastDownload',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  Site: 'Site',
  Material: 'Material',
  Equipment: 'Equipment',
  ManpowerRole: 'ManpowerRole',
  Production: 'Production',
  Dispatch: 'Dispatch',
  ReceivedMaterial: 'ReceivedMaterial',
  EquipmentLog: 'EquipmentLog',
  ManpowerLog: 'ManpowerLog',
  InventorySnapshot: 'InventorySnapshot',
  ExportJob: 'ExportJob',
  ExportAudit: 'ExportAudit'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "D:\\GItRepo\\ws-ops\\packages\\database\\src\\generated\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "D:\\GItRepo\\ws-ops\\packages\\database\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.18.0",
  "engineVersion": "34b5a692b7bd79939a9a2c3ef97d816e749cda2f",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// Prisma Schema for DeskOps\n// Construction & Demolition Recycling Facility Management System\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../src/generated/client\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\n// ============================================================================\n// Core Configuration Models\n// ============================================================================\n\nmodel Site {\n  id        String   @id @default(cuid())\n  code      String   @unique\n  name      String\n  location  String?\n  timezone  String   @default(\"UTC\")\n  isActive  Boolean  @default(true)\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  productions        Production[]\n  dispatches         Dispatch[]\n  receivedMaterials  ReceivedMaterial[]\n  equipmentLogs      EquipmentLog[]\n  manpowerLogs       ManpowerLog[]\n  inventorySnapshots InventorySnapshot[]\n  exportJobs         ExportJob[]\n  exportAudits       ExportAudit[]\n\n  @@map(\"sites\")\n}\n\nmodel Material {\n  id        String   @id\n  code      String   @unique\n  type      String\n  name      String\n  category  String\n  uom       String\n  isFinal   Boolean\n  notes     String?\n  isActive  Boolean  @default(true)\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  productions        Production[]\n  dispatches         Dispatch[]\n  receivedMaterials  ReceivedMaterial[]\n  inventorySnapshots InventorySnapshot[]\n\n  @@map(\"materials\")\n}\n\nmodel Equipment {\n  id        String   @id\n  code      String   @unique\n  name      String\n  type      String\n  isActive  Boolean  @default(true)\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  equipmentLogs EquipmentLog[]\n\n  @@map(\"equipment\")\n}\n\nmodel ManpowerRole {\n  id        String   @id\n  code      String   @unique\n  name      String\n  isActive  Boolean  @default(true)\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  manpowerLogs ManpowerLog[]\n\n  @@map(\"manpower_roles\")\n}\n\n// ============================================================================\n// Operational Models\n// ============================================================================\n\nmodel Production {\n  id         String   @id @default(cuid())\n  siteId     String\n  date       DateTime @db.Date\n  shift      String?\n  materialId String\n  qtyTon     Decimal  @db.Decimal(12, 3)\n  operation  String\n  notes      String?\n  createdAt  DateTime @default(now())\n  updatedAt  DateTime @updatedAt\n  createdBy  String?\n\n  site     Site     @relation(fields: [siteId], references: [id], onDelete: Cascade)\n  material Material @relation(fields: [materialId], references: [id])\n\n  @@unique([siteId, date, materialId, operation])\n  @@map(\"production\")\n}\n\nmodel Dispatch {\n  id         String   @id @default(cuid())\n  siteId     String\n  date       DateTime @db.Date\n  materialId String\n  qtyTon     Decimal  @db.Decimal(12, 3)\n  trips      Int?\n  owner      String?\n  reference  String?\n  operation  String\n  notes      String?\n  createdAt  DateTime @default(now())\n  updatedAt  DateTime @updatedAt\n  createdBy  String?\n\n  site     Site     @relation(fields: [siteId], references: [id], onDelete: Cascade)\n  material Material @relation(fields: [materialId], references: [id])\n\n  @@map(\"dispatches\")\n}\n\nmodel ReceivedMaterial {\n  id         String   @id @default(cuid())\n  siteId     String\n  date       DateTime @db.Date\n  materialId String\n  qtyTon     Decimal  @db.Decimal(12, 3)\n  source     String?\n  vehicleRef String?\n  notes      String?\n  createdAt  DateTime @default(now())\n  updatedAt  DateTime @updatedAt\n  createdBy  String?\n\n  site     Site     @relation(fields: [siteId], references: [id], onDelete: Cascade)\n  material Material @relation(fields: [materialId], references: [id])\n\n  @@map(\"received_materials\")\n}\n\nmodel EquipmentLog {\n  id          String   @id @default(cuid())\n  siteId      String\n  date        DateTime @db.Date\n  equipmentId String\n  hours       Decimal  @db.Decimal(8, 2)\n  count       Int      @default(0)\n  shift       String?\n  status      String?\n  notes       String?\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n  createdBy   String?\n\n  site      Site      @relation(fields: [siteId], references: [id], onDelete: Cascade)\n  equipment Equipment @relation(fields: [equipmentId], references: [id])\n\n  @@unique([siteId, date, equipmentId, shift])\n  @@map(\"equipment_logs\")\n}\n\nmodel ManpowerLog {\n  id        String   @id @default(cuid())\n  siteId    String\n  date      DateTime @db.Date\n  roleId    String\n  headcount Int\n  hours     Decimal  @db.Decimal(8, 2)\n  shift     String?\n  notes     String?\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n  createdBy String?\n\n  site Site         @relation(fields: [siteId], references: [id], onDelete: Cascade)\n  role ManpowerRole @relation(fields: [roleId], references: [id])\n\n  @@unique([siteId, date, roleId, shift])\n  @@map(\"manpower_logs\")\n}\n\nmodel InventorySnapshot {\n  id            String   @id @default(cuid())\n  siteId        String\n  date          DateTime @db.Date\n  materialId    String\n  openingTon    Decimal  @db.Decimal(12, 3)\n  producedTon   Decimal  @db.Decimal(12, 3)\n  receivedTon   Decimal  @db.Decimal(12, 3)\n  dispatchedTon Decimal  @db.Decimal(12, 3)\n  adjustmentTon Decimal  @default(0) @db.Decimal(12, 3)\n  closingTon    Decimal  @db.Decimal(12, 3)\n  isCalculated  Boolean  @default(false)\n  createdAt     DateTime @default(now())\n  updatedAt     DateTime @updatedAt\n  createdBy     String?\n\n  site     Site     @relation(fields: [siteId], references: [id], onDelete: Cascade)\n  material Material @relation(fields: [materialId], references: [id])\n\n  @@unique([siteId, date, materialId])\n  @@map(\"inventory_snapshots\")\n}\n\n// ============================================================================\n// Export & Audit Models\n// ============================================================================\n\nmodel ExportJob {\n  id           String    @id @default(cuid())\n  siteId       String\n  userId       String\n  module       String\n  dateFrom     DateTime  @db.Date\n  dateTo       DateTime  @db.Date\n  granularity  String    @default(\"daily\")\n  format       String\n  status       String    @default(\"pending\")\n  progress     Int       @default(0)\n  filePath     String?\n  fileSize     Int?\n  fileHash     String?\n  errorMessage String?\n  downloadUrl  String?\n  expiresAt    DateTime?\n  createdAt    DateTime  @default(now())\n  updatedAt    DateTime  @updatedAt\n\n  site        Site         @relation(fields: [siteId], references: [id], onDelete: Cascade)\n  exportAudit ExportAudit?\n\n  @@map(\"export_jobs\")\n}\n\nmodel ExportAudit {\n  id            String    @id @default(cuid())\n  jobId         String    @unique\n  siteId        String\n  userId        String\n  module        String\n  filtersJson   String\n  columnPreset  String?\n  recordCount   Int\n  fileSize      Int\n  fileHash      String\n  downloadCount Int       @default(0)\n  lastDownload  DateTime?\n  createdAt     DateTime  @default(now())\n\n  site Site      @relation(fields: [siteId], references: [id], onDelete: Cascade)\n  job  ExportJob @relation(fields: [jobId], references: [id], onDelete: Cascade)\n\n  @@map(\"export_audits\")\n}\n",
  "inlineSchemaHash": "b7382b14757e0abc65006f1f72c62e2e9a794af14794c6047ea78b4fa0705bc7",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Site\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"timezone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"productions\",\"kind\":\"object\",\"type\":\"Production\",\"relationName\":\"ProductionToSite\"},{\"name\":\"dispatches\",\"kind\":\"object\",\"type\":\"Dispatch\",\"relationName\":\"DispatchToSite\"},{\"name\":\"receivedMaterials\",\"kind\":\"object\",\"type\":\"ReceivedMaterial\",\"relationName\":\"ReceivedMaterialToSite\"},{\"name\":\"equipmentLogs\",\"kind\":\"object\",\"type\":\"EquipmentLog\",\"relationName\":\"EquipmentLogToSite\"},{\"name\":\"manpowerLogs\",\"kind\":\"object\",\"type\":\"ManpowerLog\",\"relationName\":\"ManpowerLogToSite\"},{\"name\":\"inventorySnapshots\",\"kind\":\"object\",\"type\":\"InventorySnapshot\",\"relationName\":\"InventorySnapshotToSite\"},{\"name\":\"exportJobs\",\"kind\":\"object\",\"type\":\"ExportJob\",\"relationName\":\"ExportJobToSite\"},{\"name\":\"exportAudits\",\"kind\":\"object\",\"type\":\"ExportAudit\",\"relationName\":\"ExportAuditToSite\"}],\"dbName\":\"sites\"},\"Material\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"uom\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isFinal\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"productions\",\"kind\":\"object\",\"type\":\"Production\",\"relationName\":\"MaterialToProduction\"},{\"name\":\"dispatches\",\"kind\":\"object\",\"type\":\"Dispatch\",\"relationName\":\"DispatchToMaterial\"},{\"name\":\"receivedMaterials\",\"kind\":\"object\",\"type\":\"ReceivedMaterial\",\"relationName\":\"MaterialToReceivedMaterial\"},{\"name\":\"inventorySnapshots\",\"kind\":\"object\",\"type\":\"InventorySnapshot\",\"relationName\":\"InventorySnapshotToMaterial\"}],\"dbName\":\"materials\"},\"Equipment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"equipmentLogs\",\"kind\":\"object\",\"type\":\"EquipmentLog\",\"relationName\":\"EquipmentToEquipmentLog\"}],\"dbName\":\"equipment\"},\"ManpowerRole\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"manpowerLogs\",\"kind\":\"object\",\"type\":\"ManpowerLog\",\"relationName\":\"ManpowerLogToManpowerRole\"}],\"dbName\":\"manpower_roles\"},\"Production\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"siteId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"shift\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"materialId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"qtyTon\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"operation\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"site\",\"kind\":\"object\",\"type\":\"Site\",\"relationName\":\"ProductionToSite\"},{\"name\":\"material\",\"kind\":\"object\",\"type\":\"Material\",\"relationName\":\"MaterialToProduction\"}],\"dbName\":\"production\"},\"Dispatch\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"siteId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"materialId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"qtyTon\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"trips\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"owner\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reference\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"operation\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"site\",\"kind\":\"object\",\"type\":\"Site\",\"relationName\":\"DispatchToSite\"},{\"name\":\"material\",\"kind\":\"object\",\"type\":\"Material\",\"relationName\":\"DispatchToMaterial\"}],\"dbName\":\"dispatches\"},\"ReceivedMaterial\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"siteId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"materialId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"qtyTon\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"source\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"vehicleRef\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"site\",\"kind\":\"object\",\"type\":\"Site\",\"relationName\":\"ReceivedMaterialToSite\"},{\"name\":\"material\",\"kind\":\"object\",\"type\":\"Material\",\"relationName\":\"MaterialToReceivedMaterial\"}],\"dbName\":\"received_materials\"},\"EquipmentLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"siteId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"equipmentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"hours\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"count\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"shift\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"site\",\"kind\":\"object\",\"type\":\"Site\",\"relationName\":\"EquipmentLogToSite\"},{\"name\":\"equipment\",\"kind\":\"object\",\"type\":\"Equipment\",\"relationName\":\"EquipmentToEquipmentLog\"}],\"dbName\":\"equipment_logs\"},\"ManpowerLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"siteId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"roleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"headcount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"hours\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"shift\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"site\",\"kind\":\"object\",\"type\":\"Site\",\"relationName\":\"ManpowerLogToSite\"},{\"name\":\"role\",\"kind\":\"object\",\"type\":\"ManpowerRole\",\"relationName\":\"ManpowerLogToManpowerRole\"}],\"dbName\":\"manpower_logs\"},\"InventorySnapshot\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"siteId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"materialId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"openingTon\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"producedTon\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"receivedTon\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"dispatchedTon\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"adjustmentTon\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"closingTon\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"isCalculated\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"site\",\"kind\":\"object\",\"type\":\"Site\",\"relationName\":\"InventorySnapshotToSite\"},{\"name\":\"material\",\"kind\":\"object\",\"type\":\"Material\",\"relationName\":\"InventorySnapshotToMaterial\"}],\"dbName\":\"inventory_snapshots\"},\"ExportJob\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"siteId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"module\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dateFrom\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"dateTo\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"granularity\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"format\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"progress\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"filePath\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fileSize\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"fileHash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"errorMessage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"downloadUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"site\",\"kind\":\"object\",\"type\":\"Site\",\"relationName\":\"ExportJobToSite\"},{\"name\":\"exportAudit\",\"kind\":\"object\",\"type\":\"ExportAudit\",\"relationName\":\"ExportAuditToExportJob\"}],\"dbName\":\"export_jobs\"},\"ExportAudit\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"jobId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"siteId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"module\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"filtersJson\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"columnPreset\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"recordCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"fileSize\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"fileHash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"downloadCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lastDownload\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"site\",\"kind\":\"object\",\"type\":\"Site\",\"relationName\":\"ExportAuditToSite\"},{\"name\":\"job\",\"kind\":\"object\",\"type\":\"ExportJob\",\"relationName\":\"ExportAuditToExportJob\"}],\"dbName\":\"export_audits\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

